# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

[DEFAULT]
path = results
seed = 42

# Set to 'True' to save/restore the model on every iteration and repetition
restore_supported = False

experiment = grid
repetitions = 1

# Training
iterations = 40

; Uncomment for quick training for debugging
;batch_size = 24
;batches_in_epoch = 2
;test_batch_size = 24
;test_batches_in_epoch = 4


# Pretty fast, and 92.25% in 40 epochs
[denseNetBest]
dense = True
nblocks = "2, 4, 8, 4"
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
avg_pool_size = 2
growth_rate = 72
dense_c1_out_planes = 144


# Pretty fast, and 92.25% in 40 epochs
[denseNet32]
dense = True
nblocks = "2, 4, 8, 4"
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
avg_pool_size = 2
growth_rate = 72
dense_c1_out_planes = 144


# Fast and pretty accurate: 91.6% in 40 epochs
[denseNet33]
dense = True
nblocks = "2, 4, 8, 4"
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
avg_pool_size = 2
growth_rate = 72
dense_c1_out_planes = 72

# Fast and pretty accurate: 28secs, 91.2% accuracy
[denseNet34]
dense = True
nblocks = "2, 4, 8, 4"
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
avg_pool_size = 2
growth_rate = 72
dense_c1_out_planes = 36


# 92.1% acc, 0.51 noise at 0.1%
[notSoDenseNet]
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = "0.2, 0.2, 0.4"
avg_pool_size = 2


# 91.5% acc after 40 epochs, 0.51 noise at 0.1%
[notSoDenseNet6]
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
dense_sparsities = "0.2, 0.2, 0.2, 0.2"
transition_sparsities = "0.2, 0.2, 0.4"
;linear_sparsity = 0.2
;linear_weight_sparsity = 0.3
;linear_n = 500
avg_pool_size = 2


# 92.3% acc, 0.54 noise at 0.1%
[notSoDenseNet7]
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = "0.2, 0.2, 0.4"
linear_sparsity = 0.2
linear_weight_sparsity = 0.3
linear_n = 500
avg_pool_size = 2


# Like notSoDenseNet7, but explore linear sparsities
[notSoDenseNet8]
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = "0.2, 0.2, 0.4"
linear_sparsity = [0.2, 0.1]
linear_weight_sparsity = 0.3
linear_n = [600, 800, 1000]
avg_pool_size = 2


# Like notSoDenseNet7, but explore transition sparsities
[notSoDenseNet9]
learning_rate = 0.05
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.92
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = ["0.2, 0.2, 0.4", "0.1, 0.1, 0.2", "0.4, 0.4, 0.4"]
linear_sparsity = 0.2
linear_weight_sparsity = 0.3
linear_n = 500
avg_pool_size = 2


# Longer run with best linear sparsity from notSoDenseNet8
[notSoDenseNet10]
iterations = 80
learning_rate = 0.1
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.93
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = "0.2, 0.2, 0.4"
linear_sparsity = 0.2
linear_weight_sparsity = 0.3
linear_n = 800
avg_pool_size = 2


# Longer run with best linear sparsity from notSoDenseNet8 and transition from notSoDenseNet9
[notSoDenseNet11]
iterations = 80
learning_rate = 0.1
weight_decay = 0.0005
momentum = 0.9
lr_scheduler_gamma = 0.93
nblocks = "2, 4, 8, 4"
growth_rate = 72
dense_c1_out_planes = 144
transition_sparsities = "0.1, 0.1, 0.2"
linear_sparsity = 0.2
linear_weight_sparsity = 0.3
linear_n = 800
avg_pool_size = 2

